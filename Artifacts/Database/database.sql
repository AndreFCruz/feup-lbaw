-- Tables
DROP TABLE IF EXISTS Category CASCADE;
DROP TABLE IF EXISTS QuestionCategory CASCADE;
DROP TABLE IF EXISTS Question CASCADE;
DROP TABLE IF EXISTS Answer CASCADE;
DROP TABLE IF EXISTS Commentable CASCADE;
DROP TABLE IF EXISTS Comment CASCADE;
DROP TABLE IF EXISTS Message CASCADE;
DROP TABLE IF EXISTS MessageContent CASCADE;
DROP TABLE IF EXISTS "TimeStamp" CASCADE;
DROP TABLE IF EXISTS ModEdition CASCADE;
DROP TABLE IF EXISTS Vote CASCADE;
DROP TABLE IF EXISTS "User" CASCADE;
DROP TABLE IF EXISTS Moderator CASCADE;
DROP TABLE IF EXISTS Notification CASCADE;
DROP TABLE IF EXISTS CommentableNotification CASCADE;
DROP TABLE IF EXISTS BadgeNotification CASCADE;
DROP TABLE IF EXISTS BadgeAttainment CASCADE;
DROP TABLE IF EXISTS Badge CASCADE;
DROP TABLE IF EXISTS ModeratorBadge CASCADE;
DROP TABLE IF EXISTS TrustedBadge CASCADE;

CREATE TABLE Category (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    num_posts INTEGER DEFAULT 0 NOT NULL
);

CREATE TABLE QuestionCategory (
    question_id BIGINT,
    category_id INTEGER,
    PRIMARY KEY (question_id, category_id)
);

CREATE TABLE Question (
    id BIGINT PRIMARY KEY,
    title TEXT NOT NULL,
    correct_answer BIGINT UNIQUE
);

CREATE TABLE Answer (
    id BIGINT PRIMARY KEY,
    question_id BIGINT NOT NULL
);

CREATE TABLE Commentable (
    id BIGINT PRIMARY KEY
);

CREATE TABLE Comment (
    id BIGINT PRIMARY KEY,
    commentable_id BIGINT NOT NULL
);

CREATE TABLE Message (
    id BIGSERIAL PRIMARY KEY,
    creation_date TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
    score INTEGER DEFAULT 0 NOT NULL,
    num_reports SMALLINT DEFAULT 0 NOT NULL,
    is_banned BOOLEAN DEFAULT FALSE
);

CREATE TABLE MessageContent (
    id BIGSERIAL PRIMARY KEY,
    content TEXT NOT NULL,
    message_id BIGINT
);

CREATE TABLE "TimeStamp" (
    message_content_id BIGINT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    creation_time TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

CREATE TABLE ModeratorEdition (
    message_content_id BIGINT PRIMARY KEY,
    moderator_id BIGINT NOT NULL,
    creation_time TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

CREATE TABLE Vote (
    message_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    positive BOOLEAN NOT NULL,
    PRIMARY KEY (message_id, user_id)
);

CREATE TABLE "User" (
    id BIGSERIAL PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    biography TEXT,
    reputation SMALLINT NOT NULL
);

CREATE TABLE Moderator (
    id BIGINT PRIMARY KEY
);

CREATE TABLE Notification (
    id BIGSERIAL PRIMARY KEY,
    description TEXT NOT NULL,
    "date" TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
    read BOOLEAN NOT NULL,
    user_id BIGINT NOT NULL
);

CREATE TABLE CommentableNotification (
    id BIGINT PRIMARY KEY,
    commentable_id BIGINT NOT NULL
);

CREATE TABLE BadgeNotification (
    id BIGINT PRIMARY KEY,
    badge_id BIGINT NOT NULL
);

CREATE TABLE BadgeAttainment (
    user_id BIGINT NOT NULL,
    badge_id SMALLINT NOT NULL,
    attainment_date TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
    PRIMARY KEY (user_id, badge_id)
);

CREATE TABLE Badge (
    id SERIAL PRIMARY KEY,
    description TEXT NOT NULL
);

CREATE TABLE ModeratorBadge (
    id INTEGER PRIMARY KEY
);

CREATE TABLE TrustedBadge (
    id INTEGER PRIMARY KEY
);


-- Foreign Keys
ALTER TABLE QuestionCategory
  ADD FOREIGN KEY (question_id) REFERENCES Question(id) ON UPDATE CASCADE;

ALTER TABLE QuestionCategory
  ADD FOREIGN KEY (category_id) REFERENCES Category(id) ON UPDATE CASCADE;

ALTER TABLE Question
  ADD FOREIGN KEY (id) REFERENCES Commentable(id) ON UPDATE CASCADE;

ALTER TABLE Question
  ADD FOREIGN KEY (correct_answer) REFERENCES Answer(id) ON UPDATE CASCADE;

ALTER TABLE Answer
  ADD FOREIGN KEY (id) REFERENCES Commentable(id) ON UPDATE CASCADE;

ALTER TABLE Answer
  ADD FOREIGN KEY (question_id) REFERENCES Question(id) ON UPDATE CASCADE;

ALTER TABLE Commentable
  ADD FOREIGN KEY (id) REFERENCES Message(id) ON UPDATE CASCADE;

ALTER TABLE Comment
  ADD FOREIGN KEY (id) REFERENCES Message(id) ON UPDATE CASCADE;

ALTER TABLE Comment
  ADD FOREIGN KEY (commentable_id) REFERENCES Commentable(id) ON UPDATE CASCADE;

ALTER TABLE MessageContent
  ADD FOREIGN KEY (message_id) REFERENCES Message(id) ON UPDATE CASCADE;

ALTER TABLE "TimeStamp"
  ADD FOREIGN KEY (message_content_id) REFERENCES MessageContent(id) ON UPDATE CASCADE;

ALTER TABLE "TimeStamp"
  ADD FOREIGN KEY (user_id) REFERENCES "User"(id) ON UPDATE CASCADE;

ALTER TABLE ModeratorEdition
  ADD FOREIGN KEY (message_content_id) REFERENCES MessageContent(id) ON UPDATE CASCADE;

ALTER TABLE ModeratorEdition
  ADD FOREIGN KEY (moderator_id) REFERENCES Moderator(id) ON UPDATE CASCADE;

ALTER TABLE Vote
  ADD FOREIGN KEY (message_id) REFERENCES Message(id) ON UPDATE CASCADE;

ALTER TABLE Vote
  ADD FOREIGN KEY (user_id) REFERENCES "User"(id) ON UPDATE CASCADE;

ALTER TABLE Moderator
  ADD FOREIGN KEY (id) REFERENCES "User"(id) ON UPDATE CASCADE;

ALTER TABLE Notification
  ADD FOREIGN KEY (user_id) REFERENCES "User"(id) ON UPDATE CASCADE;

ALTER TABLE CommentableNotification
  ADD FOREIGN KEY (id) REFERENCES Notification(id) ON UPDATE CASCADE;

ALTER TABLE CommentableNotification
  ADD FOREIGN KEY (id) REFERENCES Commentable(id) ON UPDATE CASCADE;

ALTER TABLE BadgeNotification
  ADD FOREIGN KEY (id) REFERENCES Notification(id) ON UPDATE CASCADE;

ALTER TABLE BadgeNotification
  ADD FOREIGN KEY (badge_id) REFERENCES Badge(id) ON UPDATE CASCADE;

ALTER TABLE BadgeAttainment
  ADD FOREIGN KEY (user_id) REFERENCES "User"(id) ON UPDATE CASCADE;

ALTER TABLE BadgeAttainment
  ADD FOREIGN KEY (badge_id) REFERENCES Badge(id) ON UPDATE CASCADE;

ALTER TABLE ModeratorBadge
  ADD FOREIGN KEY (id) REFERENCES Badge(id) ON UPDATE CASCADE;

ALTER TABLE TrustedBadge
  ADD FOREIGN KEY (id) REFERENCES Badge(id) ON UPDATE CASCADE;
